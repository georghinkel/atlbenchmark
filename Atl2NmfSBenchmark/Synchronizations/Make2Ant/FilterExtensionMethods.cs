//------------------------------------------------------------------------------
// <auto-generated>
//     This Code was automatically created by the Atl2NmfS higher-order transformation.
//
//     Changes to this file can result in a wrong behavior and are discarded if the code is generated again.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;

namespace Make2AntNamespace
{
    public static class FilterExtensionMethods
    {
    	
    	[ObservableProxy(typeof(Proxies), "ShellLine2Task_DisplayFilter")]
    	public static bool ShellLine2Task_DisplayFilter(this Make.IShellLine m)
    	{
    		return m.Display;
    	}
    	
    	
    	[ObservableProxy(typeof(Proxies), "ShellLine2Task_NoDisplayFilter")]
    	public static bool ShellLine2Task_NoDisplayFilter(this Make.IShellLine m)
    	{
    		return !(m.Display);
    	}
    	
    	
    	private class Proxies
    	{
    		
    		private static readonly ObservingFunc<Make.IShellLine, bool> ShellLine2Task_DisplayFilterFunc = 
    			new ObservingFunc<Make.IShellLine, bool>(m => m.Display);
    		
    		public static INotifyValue<bool> ShellLine2Task_DisplayFilter(INotifyValue<Make.IShellLine> self)
    		{
    		    return ShellLine2Task_DisplayFilterFunc.Observe(self);
    		}
    		
    		
    		private static readonly ObservingFunc<Make.IShellLine, bool> ShellLine2Task_NoDisplayFilterFunc = 
    			new ObservingFunc<Make.IShellLine, bool>(m => !(m.Display));
    		
    		public static INotifyValue<bool> ShellLine2Task_NoDisplayFilter(INotifyValue<Make.IShellLine> self)
    		{
    		    return ShellLine2Task_NoDisplayFilterFunc.Observe(self);
    		}
    		
    	}
    }
}
